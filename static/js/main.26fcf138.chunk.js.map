{"version":3,"sources":["config.js","data-provider/segmentService.ts","data-provider/dataProvider.ts","fields/headers/HeadersList.tsx","theme/theme.ts","common/BackButton.tsx","fields/headers/HeaderCreate.tsx","fields/headers/HeaderEdit.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["apiUrl","process","segmentsObj","_arrangeId","slice","data","forEach","val","i","id","_updateDb","fetchUtils","fetchJson","method","body","_getSegmentBody","JSON","stringify","SegmentDetailID","SegmentID","Title","title","Details","create","resource","getSlice","length","push","getSliceData","update","index","findIndex","delete","splice","getSegments","a","Object","keys","json","toLowerCase","replace","parse","console","log","getById","res","segmentService","find","httpClient","getList","params","total","getOne","parseInt","toString","getMany","getManyReference","then","updateMany","Promise","all","ids","map","responses","deleteMany","HeadersList","props","List","pagination","Datagrid","TextField","source","sortable","EditButton","DeleteButton","theme","createMuiTheme","palette","primary","main","deepPurple","secondary","amber","overrides","MuiAppBar","colorSecondary","color","backgroundColor","withRouter","onClick","history","goBack","children","CreateHeader","Button","Create","SimpleForm","redirect","TextInput","required","multiline","EditHeader","Edit","disabled","App","Admin","dataProvider","Resource","icon","StarIcon","options","label","name","list","edit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26fcf138.chunk.js","sourcesContent":["export const apiUrl =\n  process.env.REACT_APP_API_URL || 'http://localhost:3100/segments';\n","import { fetchUtils } from 'ra-core';\nimport { apiUrl } from '../config';\nimport { ResourceSlice } from '../models/Slice';\n\nclass SegmentService {\n  segmentsObj: any = {};\n\n  private _arrangeId = (slice: ResourceSlice) =>\n    slice.data.forEach((val, i) => (val.id = i + 1));\n\n  private _updateDb = (slice: ResourceSlice) => {\n    this._arrangeId(slice);\n    return fetchUtils.fetchJson(`${apiUrl}/${slice.id}`, {\n      method: 'PUT',\n      body: this._getSegmentBody(slice),\n    });\n  };\n\n  private _getSegmentBody = (slice: ResourceSlice) =>\n    JSON.stringify({\n      SegmentDetailID: slice.id,\n      SegmentID: slice.id,\n      Title: slice.title,\n      Details: JSON.stringify(slice.data),\n    });\n\n  // CRUD\n\n  // Create\n  create = (data: any, resource: string) => {\n    const slice = this.getSlice(resource);\n    data.id = slice.data.length + 1;\n    slice.data.push(data);\n\n    return this._updateDb(slice);\n  };\n\n  // Read\n  getSliceData = (resource: string): any[] => this.segmentsObj[resource].data;\n  getSlice = (resource: string): ResourceSlice => this.segmentsObj[resource];\n\n  // Update\n  update = (data: any, resource: string) => {\n    const slice = this.getSlice(resource);\n    const index = slice.data.findIndex(val => val.id === data.id);\n    slice.data[index] = data;\n\n    return this._updateDb(slice);\n  };\n\n  // Delete\n  delete = (id: number, resource: string) => {\n    const slice = this.getSlice(resource);\n    const index = slice.data.findIndex(val => val.id === id);\n    slice.data.splice(index, 1);\n\n    return this._updateDb(slice);\n  };\n\n  // Loading data from the server\n  getSegments = async () => {\n    if (Object.keys(this.segmentsObj).length === 0) {\n      try {\n        const response: any[] = await (await fetchUtils.fetchJson(apiUrl)).json;\n        response.forEach(val => {\n          const title: string = val.Title.toLowerCase().replace(' ', '');\n          this.segmentsObj[title] = {\n            id: val.SegmentDetailID,\n            title: val.Title,\n            data: JSON.parse(val.Details),\n          };\n        });\n        console.log(this.segmentsObj);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n}\n\nexport default new SegmentService();\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport { fetchUtils, DataProvider } from 'ra-core';\nimport segmentService from './segmentService';\n\nconst getById = (id: number, res: string) => {\n  const slice = segmentService.getSliceData(res);\n  return slice.find(val => val.id === id);\n};\n\nexport default (\n  apiUrl: string,\n  httpClient = fetchUtils.fetchJson\n): DataProvider => ({\n  getList: async (resource, params) => {\n    await segmentService.getSegments();\n    return { total: 10, data: segmentService.getSliceData(resource) };\n  },\n\n  getOne: async (resource, params) => {\n    await segmentService.getSegments();\n    return { data: { ...getById(parseInt(params.id.toString()), resource) } };\n  },\n\n  getMany: async (resource, params) => {\n    console.log(params, 'UPDATE');\n    await segmentService.getSegments();\n    return { data: segmentService.getSliceData(resource) };\n  },\n\n  getManyReference: async (resource, params) => {\n    await segmentService.getSegments();\n    return { total: 10, data: segmentService.getSliceData(resource) };\n  },\n\n  update: (resource, params) => {\n    console.log(params, 'UPDATE');\n    return segmentService\n      .update(params.data, resource)\n      .then(({ json }) => ({ data: { id: json.id, ...json } }));\n  },\n  // httpClient(`${apiUrl}/${resource}/${params.id}`, {\n  //   method: 'PUT',\n  //   body: JSON.stringify(params.data),\n  // }).then(({ json }) => ({ data: json })),\n\n  // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n  updateMany: (resource, params) =>\n    Promise.all(\n      params.ids.map(id =>\n        httpClient(`${apiUrl}/${resource}/${id}`, {\n          method: 'PUT',\n          body: JSON.stringify(params.data),\n        })\n      )\n    ).then(responses => ({ data: responses.map(({ json }) => json.id) })),\n\n  create: (resource, params) => {\n    console.log(params, 'CREATE');\n    return segmentService.create(params.data, resource).then(({ json }) => ({\n      data: { ...json, id: json.id },\n    }));\n  },\n\n  delete: (resource, params) => {\n    return segmentService\n      .delete(parseInt(params.id as string), resource)\n      .then(({ json }) => ({\n        data: json,\n      }));\n  },\n\n  // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n  deleteMany: (resource, params) =>\n    Promise.all(\n      params.ids.map(id =>\n        segmentService.delete(parseInt(id as string), resource)\n      )\n    ).then(responses => ({ data: responses.map(({ json }) => json.id) })),\n});\n","import * as React from 'react';\nimport {\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  List,\n  TextField,\n} from 'react-admin';\n\nexport interface HeadersListProps {}\nconst HeadersList: React.FC<HeadersListProps> = props => {\n  return (\n    <List pagination={false} {...props}>\n      <Datagrid>\n        <TextField source='id' sortable={false} />\n        <TextField source='title' sortable={false} />\n        <TextField source='text' sortable={false} />\n        <EditButton />\n        <DeleteButton />\n      </Datagrid>\n    </List>\n  );\n};\n\nexport default HeadersList;\n","import { createMuiTheme } from '@material-ui/core';\nimport { amber, deepPurple } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[500],\n    },\n    secondary: {\n      main: amber[600],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      colorSecondary: {\n        color: 'white',\n        backgroundColor: deepPurple[500],\n      },\n    },\n  },\n});\nexport default theme;\n","import React from 'react';\nimport { withRouter } from 'react-router';\n\nconst BackButton = (props: any) => {\n  return <div onClick={props.history.goBack}>{props.children}</div>;\n};\n\nexport default withRouter(BackButton as any);\n","import { Button } from '@material-ui/core';\nimport * as React from 'react';\nimport { Create, SimpleForm, TextInput } from 'react-admin';\nimport BackButton from '../../common/BackButton';\n\nexport interface CreateHeaderProps {}\n\nconst CreateHeader: React.FC<CreateHeaderProps> = props => {\n  return (\n    <>\n      <div>\n        <BackButton>\n          <Button>Back</Button>\n        </BackButton>\n      </div>\n      <Create title='Add a new header' {...props}>\n        <SimpleForm redirect='list'>\n          <TextInput required={true} source='title' />\n          <TextInput required={true} multiline={true} source='text' />\n        </SimpleForm>\n      </Create>\n    </>\n  );\n};\n\nexport default CreateHeader;\n","import { Button } from '@material-ui/core';\nimport * as React from 'react';\nimport { Edit, SimpleForm, TextInput } from 'react-admin';\nimport BackButton from '../../common/BackButton';\n\nexport interface EditHeaderProps {}\n\nconst EditHeader: React.FC<EditHeaderProps> = props => {\n  console.log(props);\n  return (\n    <>\n      <div>\n        <BackButton>\n          <Button>Back</Button>\n        </BackButton>\n      </div>\n      {/* <SimpleForm redirect='list'>\n        <TextInput disabled source='id' />\n        <TextInput required={true} source='title' />\n        <TextInput required={true} multiline={true} source='text' />\n      </SimpleForm> */}\n      <Edit {...props}>\n        <SimpleForm redirect='list'>\n          <TextInput disabled source='id' />\n          <TextInput required={true} source='title' />\n          <TextInput required={true} multiline={true} source='text' />\n        </SimpleForm>\n      </Edit>\n    </>\n  );\n};\n\nexport default EditHeader;\n","import React from 'react';\nimport './App.css';\nimport { Admin, Resource } from 'react-admin';\nimport dataProvider from './data-provider/dataProvider';\nimport HeadersList from './fields/headers/HeadersList';\nimport { apiUrl } from './config';\nimport StarIcon from '@material-ui/icons/Star';\nimport theme from './theme/theme';\nimport CreateHeader from './fields/headers/HeaderCreate';\nimport EditHeader from './fields/headers/HeaderEdit';\n\nfunction App() {\n  return (\n    <Admin\n      theme={theme}\n      title='Admin Panel'\n      dataProvider={dataProvider(apiUrl)}\n    >\n      <Resource\n        icon={StarIcon}\n        options={{ label: 'Headers' }}\n        name={'header'}\n        list={HeadersList}\n        create={CreateHeader}\n        edit={EditHeader}\n      ></Resource>\n    </Admin>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}