{"version":3,"sources":["theme/theme.ts","common/SingleResource.tsx","components/Menu.tsx","components/AdminAppBar.tsx","components/AdminLayout.tsx","config.ts","services/imageUploadService.ts","services/segmentService.ts","providers/data-provider/dataProvider.ts","models/AuthBody.ts","services/authService.ts","providers/auth-provider/authProvider.ts","common/PaddedContainer.tsx","components/Dashboard.tsx","fields/headers/HeadersList.tsx","common/BackButton.tsx","fields/headers/HeaderCreate.tsx","fields/headers/HeaderEdit.tsx","fields/notice-board/NoticeList.tsx","fields/notice-board/NoticeCreate.tsx","fields/notice-board/NoticeEdit.tsx","common/useVideoEnabled.ts","common/SaveToolbar.tsx","fields/about/AboutEdit.tsx","fields/footer/FooterEdit.tsx","fields/birthday/BirthdayList.tsx","fields/birthday/BirthdayCreate.tsx","fields/birthday/BirthdayEdit.tsx","fields/news/NewsList.tsx","fields/news/NewsEdit.tsx","fields/news/NewsCreate.tsx","fields/featured/FeaturedEdit.tsx","components/AdminPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["drawerActive","iconColor","deepPurple","A700","textColor","theme","createMuiTheme","palette","primary","main","secondary","amber","overrides","MuiToolbar","dense","minHeight","MuiListItemIcon","root","color","MuiDrawer","paper","marginTop","MuiMenuItem","textTransform","fontSize","fontWeight","paddingTop","paddingBottom","MuiAppBar","colorSecondary","backgroundColor","SingleResource","resource","to","useStyles","makeStyles","active","background","withRouter","onMenuClick","logout","isXSmall","useMediaQuery","breakpoints","down","open","useSelector","state","admin","ui","sidebarOpen","resources","getResources","classes","MenuItemLink","primaryText","activeClassName","leftIcon","onClick","sidebarIsOpen","exact","map","name","options","label","createElement","icon","title","flex","textOverflow","whiteSpace","overflow","spacer","AdminAppBar","props","useTheme","isSmall","AppBar","Typography","variant","className","AdminLayout","Layout","appBar","apiUrl","process","authUrl","REACT_APP_AUTH_URL","fileUploadUrl","REACT_APP_FILE_UPLOAD_URL","_uploadAllFiles","files","console","log","Promise","all","file","_uploadFile","then","response","res","body","form","FormData","append","fetchUtils","fetchJson","method","_setCustomProperty","data","fieldName","value","objectPath","set","_mapToGallery","link","index","id","imageUrl","replace","uploadSingleImage","path","a","rawFile","uploadMultipleImages","gallery","get","forEach","val","i","segmentsObj","_arrangeId","slice","_updateDb","headers","_getHttpHeaders","_getSegmentBody","JSON","stringify","SegmentDetailID","SegmentID","Title","Details","_uploadImagesIfExist","imageUploaders","images","Object","entries","image","Array","isArray","imageUploadService","create","getSlice","length","push","reject","getSliceData","update","findIndex","delete","rem","splice","getSegments","keys","json","toLowerCase","parse","error","token","localStorage","getItem","Headers","Authorization","getById","segmentService","find","AuthBody","UsernameOrEmail","Password","currentUser","login","username","password","status","Successful","Error","user","Response","access_token","authProvider","authService","auth","setItem","params","removeItem","resolve","checkAuth","checkError","getPermissions","PaddedContainer","children","padding","style","height","Dashboard","Paper","HeadersList","anyProps","toUpperCase","List","pagination","Datagrid","overflowY","overflowX","TextField","source","sortable","EditButton","DeleteButton","IconButton","history","goBack","CreateHeader","marginLeft","Create","SimpleForm","margin","redirect","TextInput","required","FileInput","accept","ImageField","rows","multiline","EditHeader","marginBottom","Edit","disabled","NoticeList","CreateNotice","React","isVideo","setIsVideo","BooleanInput","onChange","e","defaultValue","EditNotice","selected","useQueryWithStore","type","payload","videoOptions","enabled","useVideoEnabled","SaveToolbar","Toolbar","SaveButton","saving","invalid","EditAbout","toolbar","fullWidth","EditFooter","tabsActions","setTimeout","current","updateIndicator","TabbedForm","tabs","TabbedFormTabs","action","centered","FormTab","BirthdayList","CreateBirthday","DateInput","EditBirthday","NewsList","EditNews","CreateNews","Date","now","display","width","gridTemplateColumns","borderRadius","border","small","EditFeatured","SimpleShowLayout","ArrayInput","SimpleFormIterator","disableAdd","disableRemove","AdminPanel","Admin","dashboard","dataProvider","getList","total","getOne","parseInt","toString","getMany","getManyReference","updateMany","ids","responses","deleteMany","menu","Menu","layout","Resource","StarsOutlinedIcon","list","edit","EventNoteOutlinedIcon","CakeOutlinedIcon","ViewAgendaOutlinedIcon","FeaturedPlayListOutlinedIcon","AccountBoxOutlinedIcon","ListAltIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41263b77.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\nimport { amber, deepPurple } from '@material-ui/core/colors';\n\nexport const drawerActive = {\n  iconColor: deepPurple.A700,\n  textColor: deepPurple.A700,\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[500],\n    },\n    secondary: {\n      main: amber[600],\n    },\n  },\n  overrides: {\n    MuiToolbar: {\n      dense: {\n        minHeight: '55px',\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: deepPurple[300],\n      },\n    },\n    MuiDrawer: {\n      paper: {\n        marginTop: '10px',\n      },\n    },\n    MuiMenuItem: {\n      root: {\n        textTransform: 'uppercase',\n        fontSize: '14px',\n        fontWeight: 'bold',\n        paddingTop: '17px',\n        paddingBottom: '17px',\n      },\n    },\n    MuiAppBar: {\n      colorSecondary: {\n        color: 'white',\n        backgroundColor: deepPurple[500],\n      },\n    },\n  },\n});\n\nexport default theme;\n","import * as React from 'react';\nimport { Redirect } from 'react-router';\n\nconst SingleResource: React.FC<any> = ({ resource }) => {\n  return <Redirect to={`${resource}/1`} />;\n};\n\nexport default SingleResource;\n","import * as React from 'react';\nimport { createElement } from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles, Theme, useMediaQuery } from '@material-ui/core';\nimport { MenuItemLink, getResources } from 'react-admin';\nimport { withRouter } from 'react-router-dom';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport { drawerActive } from '../theme/theme';\n\nconst useStyles = makeStyles({\n  active: {\n    color: drawerActive.textColor,\n    background: '#eae6f0',\n    '& .MuiListItemIcon-root': {\n      color: drawerActive.iconColor,\n    },\n  },\n});\n\nconst Menu = ({ onMenuClick, logout }: any) => {\n  const isXSmall = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('xs')\n  );\n  const open = useSelector((state: any) => state.admin.ui.sidebarOpen);\n  const resources = useSelector(getResources);\n\n  const classes = useStyles();\n  return (\n    <div>\n      <MenuItemLink\n        key='dashboard'\n        to='/'\n        primaryText='Dashboard'\n        activeClassName={classes.active}\n        leftIcon={<DashboardIcon />}\n        onClick={onMenuClick}\n        sidebarIsOpen={open}\n        exact={true}\n      />\n      {resources.map((resource: any) => (\n        <MenuItemLink\n          key={resource.name}\n          to={`/${resource.name}`}\n          primaryText={\n            (resource.options && resource.options.label) || resource.name\n          }\n          activeClassName={classes.active}\n          leftIcon={createElement(resource.icon)}\n          onClick={onMenuClick}\n          sidebarIsOpen={open}\n        />\n      ))}\n      {isXSmall && logout}\n    </div>\n  );\n};\n\nexport default withRouter(Menu);\n","import * as React from 'react';\nimport { AppBar } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\nconst AdminAppBar = (props: any) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n  return (\n    <AppBar {...props}>\n      <Typography variant='h6' color='inherit' className={classes.title}>\n        Admin Panel\n      </Typography>\n      {!isSmall && <span className={classes.spacer} />}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import * as React from 'react';\nimport { Layout } from 'react-admin';\nimport AdminAppBar from './AdminAppBar';\n\nconst AdminLayout = (props: any) => <Layout {...props} appBar={AdminAppBar} />;\n\nexport default AdminLayout;\n","export const apiUrl =\n  process.env.REACT_APP_API_URL || 'http://localhost:3100/segments';\n\nexport const authUrl =\n  process.env.REACT_APP_AUTH_URL || 'https://api.alhamdian.pk/api/login';\n\nexport const fileUploadUrl =\n  process.env.REACT_APP_FILE_UPLOAD_URL ||\n  'https://api.nisafoundation.org/api/SegmentDetail/UploadFile';\n\nexport const DEFAULT_PATH = 'imageUrl';\n","import { fetchUtils } from 'ra-core';\nimport { fileUploadUrl } from '../config';\nimport objectPath from 'object-path';\nclass ImageService {\n  private _uploadAllFiles = (files: File[]) => {\n    console.log(files);\n    // const output: string[] = [];\n    return Promise.all(\n      files.map(file => this._uploadFile(file))\n    ).then(response => response.map(res => res.body));\n  };\n  private _uploadFile = (file: File) => {\n    const form = new FormData();\n    form.append('formFile', file, file.name);\n    return fetchUtils.fetchJson(fileUploadUrl, {\n      method: 'POST',\n      body: form,\n    });\n  };\n\n  private _setCustomProperty = (data: any, fieldName: string, value: any) => {\n    return objectPath.set(data, fieldName, value);\n  };\n\n  private _mapToGallery = (link: string, index: number) => ({\n    id: index + 1,\n    imageUrl: link.replace(/\"/g, ''),\n  });\n\n  uploadSingleImage = async (data: any, file: any, path: string) =>\n    await this._uploadFile(file.rawFile).then(res => {\n      return this._setCustomProperty(data, path, res.body.replace(/\"/g, ''));\n    });\n\n  uploadMultipleImages = async (data: any, files: any, path: string) =>\n    await this._uploadAllFiles(files.map((file: any) => file.rawFile)).then(\n      res => {\n        let gallery: any[] = objectPath.get(data, path) || [];\n        gallery = [...gallery, ...res.map(this._mapToGallery)];\n        gallery.forEach((val, i) => (val.id = i + 1));\n        return this._setCustomProperty(data, path, gallery);\n      }\n    );\n}\n\nexport default new ImageService();\n","import { fetchUtils } from 'ra-core';\nimport imageUploadService from './imageUploadService';\nimport { apiUrl } from '../config';\nimport { ResourceSlice } from '../models/Slice';\nimport { ResourceData } from '../models/ResourceData';\n\nclass SegmentService {\n  segmentsObj: any = {};\n\n  private _arrangeId = (slice: ResourceSlice) =>\n    slice.data.forEach((val, i) => (val.id = i + 1));\n\n  private _updateDb = (slice: ResourceSlice) => {\n    this._arrangeId(slice);\n    return fetchUtils.fetchJson(`${apiUrl}/${slice.id}`, {\n      method: 'PUT',\n      headers: this._getHttpHeaders(),\n      body: this._getSegmentBody(slice),\n    });\n  };\n\n  private _getHttpHeaders() {\n    const token = localStorage.getItem('auth');\n    if (!!token) {\n      return new Headers({\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      });\n    }\n    return new Headers({\n      'Content-Type': 'application/json',\n    });\n  }\n\n  private _getSegmentBody = (slice: ResourceSlice) =>\n    JSON.stringify({\n      SegmentDetailID: slice.id,\n      SegmentID: slice.id,\n      Title: slice.title,\n      Details: JSON.stringify(slice.data),\n    });\n\n  private _uploadImagesIfExist = async (data: ResourceData) => {\n    if (data.imageUploaders) {\n      const images = Object.entries(data.imageUploaders).map(\n        ([path, files]) => {\n          return {\n            path: path.replace(/_/g, '.'),\n            files,\n          };\n        }\n      );\n      await Promise.all(\n        images.map(image => {\n          if (Array.isArray(image.files))\n            return imageUploadService.uploadMultipleImages(\n              data,\n              image.files,\n              image.path\n            );\n          return imageUploadService.uploadSingleImage(\n            data,\n            image.files,\n            image.path\n          );\n        })\n      );\n    }\n\n    delete data.imageUploaders;\n  };\n\n  // CRUD\n\n  // Create\n  create = async (data: any, resource: string) => {\n    const slice = this.getSlice(resource);\n    data.id = slice.data.length + 1;\n\n    try {\n      await this._uploadImagesIfExist(data);\n      slice.data.push(data);\n      return this._updateDb(slice).then(() => ({\n        data: { ...data, id: data.id },\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  // Read\n  getSliceData = (resource: string): any[] => this.segmentsObj[resource].data;\n  getSlice = (resource: string): ResourceSlice => this.segmentsObj[resource];\n\n  // Update\n  update = async (data: any, resource: string) => {\n    const slice = this.getSlice(resource);\n    try {\n      await this._uploadImagesIfExist(data);\n      const index = slice.data.findIndex(val => val.id === data.id);\n      slice.data[index] = data;\n      return this._updateDb(slice).then(() => ({\n        data: { ...data, id: data.id },\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  // Delete\n  delete = (id: number, resource: string) => {\n    const slice = this.getSlice(resource);\n    const index = slice.data.findIndex(val => val.id === id);\n    const rem = slice.data.splice(index, 1);\n\n    return this._updateDb(slice).then(() => ({\n      data: rem[0],\n    }));\n  };\n\n  // Loading data from the server\n  getSegments = async () => {\n    if (Object.keys(this.segmentsObj).length === 0) {\n      try {\n        const response: any[] = await (await fetchUtils.fetchJson(apiUrl)).json;\n        response.forEach(val => {\n          const title: string = val.Title.toLowerCase().replace(' ', '');\n          this.segmentsObj[title] = {\n            id: val.SegmentDetailID,\n            title: val.Title,\n            data: JSON.parse(val.Details),\n          };\n        });\n        console.log(this.segmentsObj);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  };\n}\n\nexport default new SegmentService();\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport { DataProvider } from 'ra-core';\nimport segmentService from '../../services/segmentService';\n// import imageService from '../common/imageUploadService';\n\nconst getById = (id: number, res: string) => {\n  const slice = segmentService.getSliceData(res);\n  return slice.find(val => val.id === id);\n};\n\nexport default (): DataProvider => ({\n  getList: async (resource, params) => {\n    await segmentService.getSegments();\n    return {\n      total: 10,\n      data: segmentService.getSliceData(resource),\n    };\n  },\n\n  getOne: async (resource, params) => {\n    await segmentService.getSegments();\n    return { data: { ...getById(parseInt(params.id.toString()), resource) } };\n  },\n\n  getMany: async (resource, params) => {\n    await segmentService.getSegments();\n    return { data: segmentService.getSliceData(resource) };\n  },\n\n  getManyReference: async (resource, params) => {\n    await segmentService.getSegments();\n    return { total: 10, data: segmentService.getSliceData(resource) };\n  },\n\n  update: (resource, params): Promise<any> => {\n    return segmentService.update(params.data, resource);\n  },\n\n  // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n  updateMany: (resource, params) =>\n    Promise.all(\n      params.ids.map(id =>\n        segmentService.update(parseInt(id as string), resource)\n      )\n    ).then(responses => ({ data: responses.map(res => res?.data) })),\n\n  create: (resource, params) => {\n    return segmentService.create(params.data, resource);\n  },\n\n  delete: (resource, params) => {\n    return segmentService.delete(parseInt(params.id as string), resource);\n  },\n\n  // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n  deleteMany: (resource, params) =>\n    Promise.all(\n      params.ids.map(id =>\n        segmentService.delete(parseInt(id as string), resource)\n      )\n    ).then(responses => ({ data: responses.map(res => res.data) })),\n});\n","export class AuthBody {\n  constructor(public UsernameOrEmail: string, public Password: string) {}\n}\n","import { fetchUtils } from 'ra-core';\nimport { authUrl } from '../config';\nimport { AuthBody } from '../models/AuthBody';\n\nclass AuthService {\n  currentUser = null;\n  login = async (username: string, password: string) => {\n    const response = await fetchUtils.fetchJson(authUrl, {\n      method: 'POST',\n      body: JSON.stringify(new AuthBody(username, password)),\n      headers: new Headers({ 'Content-Type': 'application/json' }),\n    });\n\n    if (\n      response.status < 200 ||\n      response.status >= 300 ||\n      !response.json.Successful\n    ) {\n      throw new Error(`${response.status}`);\n    }\n\n    const user = response.json.Response;\n\n    this.currentUser = user;\n\n    return user.access_token;\n  };\n}\nexport default new AuthService();\n","import { AuthProvider } from 'react-admin';\nimport authService from '../../services/authService';\n\nconst authProvider: AuthProvider = {\n  login: async ({ username, password }) => {\n    return authService.login(username, password).then(auth => {\n      localStorage.setItem('auth', auth);\n    });\n  },\n  logout: params => {\n    localStorage.removeItem('auth');\n    return Promise.resolve();\n  },\n  checkAuth: params => {\n    if (!!localStorage.getItem('auth')) return Promise.resolve();\n    return Promise.reject();\n  },\n  checkError: params => {\n    return Promise.resolve();\n  },\n  getPermissions: params => {\n    return Promise.resolve();\n  },\n};\n\nexport default authProvider;\n","import * as React from 'react';\ninterface PaddedContainerProps {\n  children: any;\n  padding: string;\n  className?: any;\n}\n\nconst PaddedContainer: React.FC<PaddedContainerProps> = ({\n  children,\n  padding,\n  className,\n}) => {\n  return (\n    <div className={className} style={{ padding }}>\n      {children}\n    </div>\n  );\n};\n\nexport default PaddedContainer;\n","import { makeStyles, Paper } from '@material-ui/core';\nimport * as React from 'react';\nimport PaddedContainer from '../common/PaddedContainer';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: '15px',\n    height: '100%',\n  },\n});\n\ninterface DashboardProps {}\n\nconst Dashboard: React.FC<DashboardProps> = () => {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <PaddedContainer padding='10px'>\n        <h1>Welcome to the dashboard</h1>\n      </PaddedContainer>\n    </Paper>\n  );\n};\n\nexport default Dashboard;\n","import { useMediaQuery, useTheme } from '@material-ui/core';\nimport * as React from 'react';\nimport {\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  List,\n  TextField,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface HeadersListProps {}\nconst HeadersList: React.FC<HeadersListProps> = props => {\n  const anyProps = props as any;\n  const title = anyProps.resource[0].toUpperCase() + anyProps.resource.slice(1);\n\n  const theme = useTheme();\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <PaddedContainer padding='10px'>\n      <h2>{title} List</h2>\n\n      <List pagination={false} {...props}>\n        <Datagrid style={{ overflowY: 'hidden', overflowX: 'scroll' }}>\n          <TextField source='id' sortable={false} />\n          <TextField source='title' sortable={false} />\n          {!isSmall && <TextField source='text' sortable={false} />}\n          <EditButton />\n          {!isSmall && <DeleteButton />}\n        </Datagrid>\n      </List>\n    </PaddedContainer>\n  );\n};\n\nexport default HeadersList;\n","import { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { withRouter } from 'react-router-dom';\n\nconst BackButton = (props: any) => {\n  return (\n    <IconButton color='primary' onClick={props.history.goBack}>\n      <ArrowBackIcon />\n    </IconButton>\n  );\n};\n\nexport default withRouter(BackButton as any);\n","import * as React from 'react';\nimport {\n  Create,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\n// import CustomUrlField from '../../common/CustomUrlField';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface CreateHeaderProps {}\n\nconst CreateHeader: React.FC<CreateHeaderProps> = props => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px' }}>Add a new Header</h2>\n      </div>\n      <Create title='Add a new header' {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput required={true} source='title' />\n          <FileInput\n            accept='image/*'\n            label='Image Upload'\n            source='imageUploaders.imageUrl'\n          >\n            <ImageField source='src' title='title' />\n          </FileInput>\n          <TextInput rows={6} required={true} multiline={true} source='text' />\n          {/* <CustomUrlField path='images.imageUrl' /> */}\n        </SimpleForm>\n      </Create>\n    </PaddedContainer>\n  );\n};\n\nexport default CreateHeader;\n","import * as React from 'react';\nimport {\n  Edit,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\nimport PaddedContainer from '../../common/PaddedContainer';\n// import IterableImageField from '../../common/IterableImageField';\n\nconst EditHeader: React.FC = (props: any) => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px', marginBottom: '30px' }}>\n          Edit Header\n        </h2>\n      </div>\n      <Edit {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput disabled source='id' />\n          <TextInput required={true} source='title' />\n          <ImageField source='imageUrl' label='Image' />\n          <FileInput\n            accept='image/*'\n            label='Image Upload'\n            source='imageUploaders.imageUrl'\n          >\n            <ImageField source='src' title='title' />\n          </FileInput>\n          <TextInput rows={6} required={true} multiline={true} source='text' />\n\n          {/* <ArrayInput label='Gallery' source='images.imageUrl'>\n            <SimpleFormIterator className='myCustomForm' disableAdd={true}>\n              <IterableImageField />\n            </SimpleFormIterator>\n          </ArrayInput> */}\n        </SimpleForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditHeader;\n","import { useMediaQuery, useTheme } from '@material-ui/core';\nimport * as React from 'react';\nimport {\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  List,\n  TextField,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface NoticeListProps {}\nconst NoticeList: React.FC<NoticeListProps> = props => {\n  const anyProps = props as any;\n  const title = anyProps.resource[0].toUpperCase() + anyProps.resource.slice(1);\n  const theme = useTheme();\n\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n  return (\n    <PaddedContainer padding='10px'>\n      <h2>{title} List</h2>\n\n      <List pagination={false} {...props}>\n        <Datagrid style={{ overflowY: 'hidden', overflowX: 'scroll' }}>\n          <TextField source='id' sortable={false} />\n          <TextField source='title' sortable={false} />\n          {!isSmall && <TextField source='text' sortable={false} />}\n          <EditButton />\n          {!isSmall && <DeleteButton />}\n        </Datagrid>\n      </List>\n    </PaddedContainer>\n  );\n};\n\nexport default NoticeList;\n","import * as React from 'react';\nimport {\n  BooleanInput,\n  Create,\n  CreateProps,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface CreateNoticeProps extends CreateProps {}\n\nconst CreateNotice: React.FC<CreateNoticeProps> = props => {\n  const [isVideo, setIsVideo] = React.useState(false);\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px' }}>Add a new Notice</h2>\n      </div>\n      <Create title='Add a new header' {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput label='Title' source='title' />\n          <BooleanInput\n            onChange={e => setIsVideo(e)}\n            defaultValue={isVideo}\n            label='Enable Video'\n            source='videoOptions.enabled'\n          />\n          {isVideo && (\n            <TextInput\n              label='YouTube embed link'\n              source='videoOptions.ytLink'\n            />\n          )}\n          {!isVideo && (\n            <FileInput\n              accept='image/*'\n              label='Image Upload'\n              source='imageUploaders.imageUrl'\n            >\n              <ImageField source='src' title='title' />\n            </FileInput>\n          )}\n          <TextInput\n            rows={6}\n            label='Text'\n            defaultValue={''}\n            multiline={true}\n            source='text'\n          />\n          {/* <TextInput disabled source='imageUrl' /> */}\n        </SimpleForm>\n      </Create>\n    </PaddedContainer>\n  );\n};\n\nexport default CreateNotice;\n","import * as React from 'react';\nimport {\n  BooleanInput,\n  Edit,\n  EditProps,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\nimport PaddedContainer from '../../common/PaddedContainer';\nimport { useVideoEnabled } from '../../common/useVideoEnabled';\n\nconst EditNotice: React.FC<EditProps> = props => {\n  const selected = useVideoEnabled(props.resource!, props.id!);\n  const [isVideo, setIsVideo] = React.useState(selected);\n  React.useEffect(() => {\n    setIsVideo(selected);\n  }, [selected]);\n\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px', marginBottom: '30px' }}>\n          Edit Notice\n        </h2>\n      </div>\n      <Edit {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput disabled source='id' />\n          <TextInput required={true} source='title' />\n          <ImageField source='imageUrl' label='Image' />\n          <BooleanInput\n            onChange={e => setIsVideo(e)}\n            label='Enable Video'\n            source='videoOptions.enabled'\n          />\n\n          {isVideo && (\n            <TextInput\n              label='YouTube embed link'\n              source='videoOptions.ytLink'\n            />\n          )}\n\n          {!isVideo && (\n            <FileInput\n              accept='image/*'\n              label='Image Upload'\n              source='imageUploaders.imageUrl'\n            >\n              <ImageField source='src' title='title' />\n            </FileInput>\n          )}\n\n          <TextInput rows={6} required={true} multiline={true} source='text' />\n        </SimpleForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditNotice;\n","import { useQueryWithStore } from 'react-admin';\n\nexport function useVideoEnabled(resource: string, id: string) {\n  const { data } = useQueryWithStore({\n    type: 'getOne',\n    resource,\n    payload: { id },\n  });\n  return data?.videoOptions.enabled;\n}\n","import React from 'react';\nimport { SaveButton, Toolbar, ToolbarProps } from 'react-admin';\n\nexport interface SaveToolbarProps extends ToolbarProps {}\n\nconst SaveToolbar: React.FC<SaveToolbarProps> = (props: any) => {\n  return (\n    <Toolbar {...props}>\n      <SaveButton disabled={props.saving && props.invalid} />\n    </Toolbar>\n  );\n};\n\nexport default SaveToolbar;\n","import * as React from 'react';\nimport {\n  Edit,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\nimport { Redirect } from 'react-router';\nimport SaveToolbar from '../../common/SaveToolbar';\n\nconst EditAbout: React.FC = (props: any) => {\n  if (props.id !== '1') return <Redirect to={`/${props.resource}/1`} />;\n\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <h2 style={{ marginLeft: '18px', marginBottom: '30px' }}>About</h2>\n      </div>\n      <Edit {...props}>\n        <SimpleForm toolbar={<SaveToolbar />} margin='normal' redirect={false}>\n          <TextInput fullWidth={true} required={true} source='title' />\n          <ImageField source='imageUrl' label='Image' />\n          <FileInput\n            accept='image/*'\n            label='Image Upload'\n            source='imageUploaders.imageUrl'\n          >\n            <ImageField source='src' title='title' />\n          </FileInput>\n          <TextInput\n            fullWidth={true}\n            rows={8}\n            required={true}\n            multiline={true}\n            source='text'\n          />\n          {/* <CustomUrlField path='images.imageUrl' /> */}\n        </SimpleForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditAbout;\n","import * as React from 'react';\nimport {\n  Edit,\n  FormTab,\n  TabbedForm,\n  TabbedFormTabs,\n  TextInput,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\nimport StorefrontIcon from '@material-ui/icons/Storefront';\nimport MailOutlinedIcon from '@material-ui/icons/MailOutlined';\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport { Redirect } from 'react-router';\nimport { TabsActions } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport SaveToolbar from '../../common/SaveToolbar';\n\nconst EditFooter: React.FC = (props: any) => {\n  const tabsActions = React.useRef<any | TabsActions>();\n  const open = useSelector((state: any) => state.admin.ui.sidebarOpen);\n\n  // Recalculating tab indicator position due to a bug in MUI\n  React.useEffect(() => {\n    setTimeout(() => tabsActions.current?.updateIndicator(), 220);\n  }, [open]);\n\n  if (props.id !== '1') return <Redirect to={`/${props.resource}/1`} />;\n\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <h2 style={{ marginLeft: '18px', marginBottom: '30px' }}>Footer</h2>\n      </div>\n      <Edit {...props}>\n        <TabbedForm\n          margin='normal'\n          tabs={<TabbedFormTabs action={tabsActions} centered={true} />}\n          redirect={false}\n          toolbar={<SaveToolbar />}\n        >\n          <FormTab icon={<AccountBoxOutlinedIcon />} label='About'>\n            <TextInput\n              multiline={true}\n              rows={8}\n              label='About Text'\n              fullWidth={true}\n              source='about.aboutUs'\n            />\n          </FormTab>\n          <FormTab icon={<MailOutlinedIcon />} label='Contact'>\n            <TextInput\n              label='Address'\n              fullWidth={true}\n              source='contact.address'\n            />\n            <TextInput label='Phone' fullWidth={true} source='contact.phone' />\n            <TextInput label='Email' fullWidth={true} source='contact.email' />\n          </FormTab>\n          <FormTab icon={<InstagramIcon />} label='Social'>\n            <TextInput\n              label='Facebook'\n              fullWidth={true}\n              source='social.facebook'\n            />\n            <TextInput\n              label='Instagram'\n              fullWidth={true}\n              source='social.instagram'\n            />\n            <TextInput\n              label='Twitter'\n              fullWidth={true}\n              source='social.twitter'\n            />\n            <TextInput\n              label='YouTube'\n              fullWidth={true}\n              source='social.youtube'\n            />\n          </FormTab>\n          <FormTab icon={<StorefrontIcon />} label='Stores'>\n            <TextInput\n              label='App Store'\n              fullWidth={true}\n              source='stores.appStore'\n            />\n            <TextInput\n              label='Play Store'\n              fullWidth={true}\n              source='stores.playStore'\n            />\n          </FormTab>\n        </TabbedForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditFooter;\n","import { useMediaQuery, useTheme } from '@material-ui/core';\nimport * as React from 'react';\nimport {\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  List,\n  TextField,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface BirthdayListProps {}\nconst BirthdayList: React.FC<BirthdayListProps> = props => {\n  const anyProps = props as any;\n  const title = anyProps.resource[0].toUpperCase() + anyProps.resource.slice(1);\n  const theme = useTheme();\n\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n  return (\n    <PaddedContainer padding='10px'>\n      <h2>{title} List</h2>\n\n      <List pagination={false} {...props}>\n        <Datagrid style={{ overflowY: 'hidden', overflowX: 'scroll' }}>\n          <TextField source='reg' sortable={false} />\n          <TextField source='name' sortable={false} />\n          <EditButton />\n          {!isSmall && <DeleteButton />}\n        </Datagrid>\n      </List>\n    </PaddedContainer>\n  );\n};\n\nexport default BirthdayList;\n","import * as React from 'react';\nimport {\n  Create,\n  DateInput,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\n// import CustomUrlField from '../../common/CustomUrlField';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface CreateBirthdayProps {}\n\nconst CreateBirthday: React.FC<CreateBirthdayProps> = props => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px' }}>Add a new Birthday</h2>\n      </div>\n      <Create title='Add a new birthday' {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput label='Name' source='name' />\n          <TextInput label='Regestration' source='reg' />\n          <DateInput label='Date' source='date' />\n\n          <FileInput\n            accept='image/*'\n            label='Image Upload'\n            source='imageUploaders.imageUrl'\n          >\n            <ImageField source='src' title='title' />\n          </FileInput>\n          {/* <CustomUrlField path='images.imageUrl' /> */}\n        </SimpleForm>\n      </Create>\n    </PaddedContainer>\n  );\n};\n\nexport default CreateBirthday;\n","import * as React from 'react';\nimport {\n  DateInput,\n  Edit,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\nimport PaddedContainer from '../../common/PaddedContainer';\n// import IterableImageField from '../../common/IterableImageField';\n\nconst EditBirthday: React.FC = (props: any) => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px', marginBottom: '30px' }}>\n          Edit Birthday\n        </h2>\n      </div>\n      <Edit {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput disabled label='Id' source='id' />\n          <TextInput label='Name' source='name' />\n          <TextInput label='Regestration' source='reg' />\n          <DateInput label='Date' source='date' />\n\n          <ImageField source='imageUrl' label='Image' />\n          <FileInput\n            accept='image/*'\n            label='Image Upload'\n            source='imageUploaders.imageUrl'\n          >\n            <ImageField source='src' title='title' />\n          </FileInput>\n\n          {/* <ArrayInput label='Gallery' source='images.imageUrl'>\n            <SimpleFormIterator className='myCustomForm' disableAdd={true}>\n              <IterableImageField />\n            </SimpleFormIterator>\n          </ArrayInput> */}\n        </SimpleForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditBirthday;\n","import { useMediaQuery, useTheme } from '@material-ui/core';\nimport * as React from 'react';\nimport {\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  List,\n  TextField,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface NewsListProps {}\nconst NewsList: React.FC<NewsListProps> = props => {\n  const anyProps = props as any;\n  const title = anyProps.resource[0].toUpperCase() + anyProps.resource.slice(1);\n  const theme = useTheme();\n\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n  return (\n    <PaddedContainer padding='10px'>\n      <h2>{title} List</h2>\n\n      <List pagination={false} {...props}>\n        <Datagrid style={{ overflowY: 'hidden', overflowX: 'scroll' }}>\n          <TextField source='id' sortable={false} />\n          <TextField source='title' sortable={false} />\n          {!isSmall && <TextField source='text' sortable={false} />}\n          <EditButton />\n          {!isSmall && <DeleteButton />}\n        </Datagrid>\n      </List>\n    </PaddedContainer>\n  );\n};\n\nexport default NewsList;\n","import * as React from 'react';\nimport {\n  DateInput,\n  Edit,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\nimport PaddedContainer from '../../common/PaddedContainer';\n// import IterableImageField from '../../common/IterableImageField';\n\nconst EditNews: React.FC = (props: any) => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px', marginBottom: '30px' }}>Edit News</h2>\n      </div>\n      <Edit {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput label='Id' disabled source='id' />\n          <TextInput label='Title' source='title' />\n          <DateInput source='date' />\n          <ImageField source='imageUrl' label='Image' />\n\n          <FileInput\n            accept='image/*'\n            label='Image Upload'\n            source='imageUploaders.imageUrl'\n          >\n            <ImageField source='src' title='title' />\n          </FileInput>\n          <TextInput rows={6} label='Text' multiline={true} source='text' />\n\n          {/* <ArrayInput label='Gallery' source='images.imageUrl'>\n            <SimpleFormIterator className='myCustomForm' disableAdd={true}>\n              <IterableImageField />\n            </SimpleFormIterator>\n          </ArrayInput> */}\n        </SimpleForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditNews;\n","import * as React from 'react';\nimport {\n  Create,\n  DateInput,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport BackButton from '../../common/BackButton';\n// import CustomUrlField from '../../common/CustomUrlField';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface CreateNewsProps {}\n\nconst CreateNews: React.FC<CreateNewsProps> = props => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h2 style={{ marginLeft: '18px' }}>Add a new News</h2>\n      </div>\n      <Create title='Add another News' {...props}>\n        <SimpleForm margin='normal' redirect='list'>\n          <TextInput label='Title' source='title' />\n          <DateInput label='Date' defaultValue={Date.now()} source='date' />\n          <FileInput\n            accept='image/*'\n            label='Image Upload'\n            source='imageUploaders.imageUrl'\n          >\n            <ImageField source='src' title='title' />\n          </FileInput>\n          <TextInput\n            rows={6}\n            defaultValue={''}\n            multiline={true}\n            label='Text'\n            source='text'\n          />\n\n          {/* <CustomUrlField path='images.imageUrl' /> */}\n        </SimpleForm>\n      </Create>\n    </PaddedContainer>\n  );\n};\n\nexport default CreateNews;\n","import * as React from 'react';\nimport {\n  ArrayInput,\n  Edit,\n  FileInput,\n  ImageField,\n  SimpleForm,\n  SimpleFormIterator,\n  SimpleShowLayout,\n  TextInput,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\nimport { Redirect } from 'react-router';\nimport SaveToolbar from '../../common/SaveToolbar';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    width: '100%',\n    gridTemplateColumns: '1fr 1fr',\n    '& li': {\n      margin: '10px',\n      borderRadius: '4px',\n      border: '1px solid rgba(0,0,0,.1)',\n      '& p': {\n        display: 'none',\n      },\n      '& section': {\n        padding: '10px 20px',\n      },\n    },\n  },\n  small: {\n    gridTemplateColumns: '1fr',\n  },\n});\n\nconst EditFeatured: React.FC = (props: any) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\n\n  if (props.id !== '1') return <Redirect to={`/${props.resource}/1`} />;\n\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <h2 style={{ marginLeft: '18px', marginBottom: '30px' }}>Featured</h2>\n      </div>\n      <Edit {...props}>\n        <SimpleForm toolbar={<SaveToolbar />} margin='normal' redirect={false}>\n          <SimpleShowLayout\n            className={\n              isSmall ? `${classes.root} ${classes.small}` : classes.root\n            }\n          >\n            <ImageField source='imageUrl' label='Image' />\n            <FileInput\n              accept='image/*'\n              label='Upload Featured Image'\n              source='imageUploaders.imageUrl'\n            >\n              <ImageField source='src' title='title' />\n            </FileInput>\n          </SimpleShowLayout>\n\n          <ArrayInput source='cards'>\n            <SimpleFormIterator\n              className={\n                isSmall ? `${classes.root} ${classes.small}` : classes.root\n              }\n              disableAdd={true}\n              disableRemove={true}\n            >\n              <TextInput label='Card Title' fullWidth={true} source='title' />\n              <TextInput\n                label='Card Text'\n                rows={6}\n                multiline={true}\n                fullWidth={true}\n                source='text'\n              />\n            </SimpleFormIterator>\n          </ArrayInput>\n        </SimpleForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditFeatured;\n","import React from 'react';\nimport { Admin, Resource } from 'react-admin';\nimport theme from '../theme/theme';\nimport SingleResource from '../common/SingleResource';\nimport Menu from '../components/Menu';\nimport AdminLayout from './AdminLayout';\n\n//Providers\nimport dataProvider from '../providers/data-provider/dataProvider';\nimport authProvider from '../providers/auth-provider/authProvider';\n\n// Dashboard\nimport Dashboard from '../components/Dashboard';\n// Headers\nimport HeadersList from '../fields/headers/HeadersList';\nimport CreateHeader from '../fields/headers/HeaderCreate';\nimport EditHeader from '../fields/headers/HeaderEdit';\nimport StarsOutlinedIcon from '@material-ui/icons/StarsOutlined';\n// Notice Board\nimport NoticeList from '../fields/notice-board/NoticeList';\nimport CreateNotice from '../fields/notice-board/NoticeCreate';\nimport EditNotice from '../fields/notice-board/NoticeEdit';\nimport ViewAgendaOutlinedIcon from '@material-ui/icons/ViewAgendaOutlined';\n// About\nimport EditAbout from '../fields/about/AboutEdit';\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\n// Footer\nimport EditFooter from '../fields/footer/FooterEdit';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n// Birthday\nimport BirthdayList from '../fields/birthday/BirthdayList';\nimport CreateBirthday from '../fields/birthday/BirthdayCreate';\nimport EditBirthday from '../fields/birthday/BirthdayEdit';\nimport CakeOutlinedIcon from '@material-ui/icons/CakeOutlined';\n//News\nimport NewsList from '../fields/news/NewsList';\nimport EditNews from '../fields/news/NewsEdit';\nimport CreateNews from '../fields/news/NewsCreate';\nimport EventNoteOutlinedIcon from '@material-ui/icons/EventNoteOutlined';\n// Featured\nimport EditFeatured from '../fields/featured/FeaturedEdit';\nimport FeaturedPlayListOutlinedIcon from '@material-ui/icons/FeaturedPlayListOutlined';\n\nfunction AdminPanel() {\n  return (\n    <Admin\n      theme={theme}\n      title='Admin Panel'\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider()}\n      menu={Menu}\n      layout={AdminLayout}\n    >\n      <Resource\n        icon={StarsOutlinedIcon}\n        options={{ label: 'Headers' }}\n        name={'header'}\n        list={HeadersList}\n        create={CreateHeader}\n        edit={EditHeader}\n      ></Resource>\n\n      <Resource\n        icon={EventNoteOutlinedIcon}\n        options={{ label: 'News' }}\n        name={'news'}\n        list={NewsList}\n        edit={EditNews}\n        create={CreateNews}\n      ></Resource>\n\n      <Resource\n        icon={CakeOutlinedIcon}\n        options={{ label: 'Birthday' }}\n        name={'birthday'}\n        list={BirthdayList}\n        edit={EditBirthday}\n        create={CreateBirthday}\n      ></Resource>\n\n      <Resource\n        icon={ViewAgendaOutlinedIcon}\n        options={{ label: 'Notice Board' }}\n        name={'noticeboard'}\n        list={NoticeList}\n        edit={EditNotice}\n        create={CreateNotice}\n      ></Resource>\n\n      <Resource\n        icon={FeaturedPlayListOutlinedIcon}\n        options={{ label: 'Featured' }}\n        name={'featured'}\n        list={SingleResource}\n        edit={EditFeatured}\n      ></Resource>\n\n      <Resource\n        icon={AccountBoxOutlinedIcon}\n        options={{ label: 'About' }}\n        name={'about'}\n        list={SingleResource}\n        edit={EditAbout}\n      ></Resource>\n\n      <Resource\n        icon={ListAltIcon}\n        options={{ label: 'Footer' }}\n        name={'footer'}\n        list={SingleResource}\n        edit={EditFooter}\n      ></Resource>\n    </Admin>\n  );\n}\n\nexport default AdminPanel;\n","import React from 'react';\n\nimport AdminPanel from './components/AdminPanel';\n\nfunction App() {\n  return <AdminPanel />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}