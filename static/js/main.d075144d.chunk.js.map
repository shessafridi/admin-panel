{"version":3,"sources":["config.js","data-provider/segmentService.ts","data-provider/dataProvider.ts","common/PaddedContainer.tsx","fields/headers/HeadersList.tsx","theme/theme.ts","common/BackButton.tsx","fields/headers/HeaderCreate.tsx","fields/headers/HeaderEdit.tsx","components/Dashboard.tsx","models/AuthBody.ts","auth-provider/authService.ts","auth-provider/authProvider.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["apiUrl","process","authUrl","REACT_APP_AUTH_URL","segmentsObj","_arrangeId","slice","data","forEach","val","i","id","_updateDb","fetchUtils","fetchJson","method","headers","getHttpHeaders","body","_getSegmentBody","JSON","stringify","SegmentDetailID","SegmentID","Title","title","Details","create","resource","getSlice","length","push","then","getSliceData","update","index","findIndex","delete","rem","splice","getSegments","a","Object","keys","json","toLowerCase","replace","parse","console","log","token","localStorage","getItem","Headers","Authorization","getById","res","segmentService","find","httpClient","getList","params","total","getOne","parseInt","toString","getMany","getManyReference","updateMany","Promise","all","ids","map","responses","deleteMany","PaddedContainer","children","padding","style","HeadersList","props","anyProps","toUpperCase","List","pagination","Datagrid","TextField","source","sortable","EditButton","DeleteButton","theme","createMuiTheme","palette","primary","main","deepPurple","secondary","amber","overrides","MuiToolbar","dense","minHeight","MuiListItemIcon","root","color","MuiMenuItem","textTransform","fontSize","fontWeight","marginTop","paddingTop","paddingBottom","MuiAppBar","colorSecondary","backgroundColor","withRouter","IconButton","onClick","history","goBack","CreateHeader","marginLeft","Create","SimpleForm","redirect","TextInput","required","multiline","disabled","EditHeader","Edit","Dashboard","AuthBody","UsernameOrEmail","Password","currentUser","login","username","password","response","status","Successful","Error","user","Response","access_token","authProvider","authService","auth","setItem","logout","removeItem","resolve","checkAuth","reject","checkError","getPermissions","App","Admin","dashboard","dataProvider","Resource","icon","StarIcon","options","label","name","list","edit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d075144d.chunk.js","sourcesContent":["export const apiUrl =\n  process.env.REACT_APP_API_URL || 'http://localhost:3100/segments';\n\nexport const authUrl =\n  process.env.REACT_APP_AUTH_URL || 'https://api.alhamdian.pk/api/login';\n","import { fetchUtils } from 'ra-core';\nimport { apiUrl } from '../config';\nimport { ResourceSlice } from '../models/Slice';\n\nclass SegmentService {\n  segmentsObj: any = {};\n\n  private _arrangeId = (slice: ResourceSlice) =>\n    slice.data.forEach((val, i) => (val.id = i + 1));\n\n  private _updateDb = (slice: ResourceSlice) => {\n    this._arrangeId(slice);\n    return fetchUtils.fetchJson(`${apiUrl}/${slice.id}`, {\n      method: 'PUT',\n      headers: this.getHttpHeaders(),\n      body: this._getSegmentBody(slice),\n    });\n  };\n\n  private getHttpHeaders() {\n    const token = localStorage.getItem('auth');\n    if (!!token) {\n      return new Headers({\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      });\n    }\n    return new Headers({\n      'Content-Type': 'application/json',\n    });\n  }\n\n  private _getSegmentBody = (slice: ResourceSlice) =>\n    JSON.stringify({\n      SegmentDetailID: slice.id,\n      SegmentID: slice.id,\n      Title: slice.title,\n      Details: JSON.stringify(slice.data),\n    });\n\n  // CRUD\n\n  // Create\n  create = (data: any, resource: string) => {\n    const slice = this.getSlice(resource);\n    data.id = slice.data.length + 1;\n    slice.data.push(data);\n\n    return this._updateDb(slice).then(() => ({\n      data: { ...data, id: data.id },\n    }));\n  };\n\n  // Read\n  getSliceData = (resource: string): any[] => this.segmentsObj[resource].data;\n  getSlice = (resource: string): ResourceSlice => this.segmentsObj[resource];\n\n  // Update\n  update = (data: any, resource: string) => {\n    const slice = this.getSlice(resource);\n    const index = slice.data.findIndex(val => val.id === data.id);\n    slice.data[index] = data;\n\n    return this._updateDb(slice);\n  };\n\n  // Delete\n  delete = (id: number, resource: string) => {\n    const slice = this.getSlice(resource);\n    const index = slice.data.findIndex(val => val.id === id);\n    const rem = slice.data.splice(index, 1);\n\n    return this._updateDb(slice).then(() => ({\n      data: rem[0],\n    }));\n  };\n\n  // Loading data from the server\n  getSegments = async () => {\n    if (Object.keys(this.segmentsObj).length === 0) {\n      try {\n        const response: any[] = await (await fetchUtils.fetchJson(apiUrl)).json;\n        response.forEach(val => {\n          const title: string = val.Title.toLowerCase().replace(' ', '');\n          this.segmentsObj[title] = {\n            id: val.SegmentDetailID,\n            title: val.Title,\n            data: JSON.parse(val.Details),\n          };\n        });\n        console.log(this.segmentsObj);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n}\n\nexport default new SegmentService();\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport { fetchUtils, DataProvider } from 'ra-core';\nimport segmentService from './segmentService';\n\nconst getById = (id: number, res: string) => {\n  const slice = segmentService.getSliceData(res);\n  return slice.find(val => val.id === id);\n};\n\nexport default (\n  apiUrl: string,\n  httpClient = fetchUtils.fetchJson\n): DataProvider => ({\n  getList: async (resource, params) => {\n    await segmentService.getSegments();\n    return { total: 10, data: segmentService.getSliceData(resource) };\n  },\n\n  getOne: async (resource, params) => {\n    await segmentService.getSegments();\n    return { data: { ...getById(parseInt(params.id.toString()), resource) } };\n  },\n\n  getMany: async (resource, params) => {\n    console.log(params, 'UPDATE');\n    await segmentService.getSegments();\n    return { data: segmentService.getSliceData(resource) };\n  },\n\n  getManyReference: async (resource, params) => {\n    await segmentService.getSegments();\n    return { total: 10, data: segmentService.getSliceData(resource) };\n  },\n\n  update: (resource, params) => {\n    console.log(params, 'UPDATE');\n    return segmentService\n      .update(params.data, resource)\n      .then(({ json }) => ({ data: { id: json.id, ...json } }));\n  },\n  // httpClient(`${apiUrl}/${resource}/${params.id}`, {\n  //   method: 'PUT',\n  //   body: JSON.stringify(params.data),\n  // }).then(({ json }) => ({ data: json })),\n\n  // simple-rest doesn't handle provide an updateMany route, so we fallback to calling update n times instead\n  updateMany: (resource, params) =>\n    Promise.all(\n      params.ids.map(id =>\n        httpClient(`${apiUrl}/${resource}/${id}`, {\n          method: 'PUT',\n          body: JSON.stringify(params.data),\n        })\n      )\n    ).then(responses => ({ data: responses.map(({ json }) => json.id) })),\n\n  create: (resource, params) => {\n    console.log(params, 'RES');\n    return segmentService.create(params.data, resource);\n  },\n\n  delete: (resource, params) => {\n    return segmentService.delete(parseInt(params.id as string), resource);\n  },\n\n  // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n  deleteMany: (resource, params) =>\n    Promise.all(\n      params.ids.map(id =>\n        segmentService.delete(parseInt(id as string), resource)\n      )\n    ).then(responses => ({ data: responses.map(res => res.data) })),\n});\n","import * as React from 'react';\ninterface PaddedContainerProps {\n  children: any;\n  padding: string;\n}\n\nconst PaddedContainer: React.FC<PaddedContainerProps> = ({\n  children,\n  padding,\n}) => {\n  return <div style={{ padding }}>{children}</div>;\n};\n\nexport default PaddedContainer;\n","import * as React from 'react';\nimport {\n  Datagrid,\n  DeleteButton,\n  EditButton,\n  List,\n  TextField,\n} from 'react-admin';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface HeadersListProps {}\nconst HeadersList: React.FC<HeadersListProps> = props => {\n  const anyProps = props as any;\n  const title = anyProps.resource[0].toUpperCase() + anyProps.resource.slice(1);\n  return (\n    <PaddedContainer padding='10px'>\n      <h2>{title} List</h2>\n      <List pagination={false} {...props}>\n        <Datagrid>\n          <TextField source='id' sortable={false} />\n          <TextField source='title' sortable={false} />\n          <TextField source='text' sortable={false} />\n          <EditButton />\n          <DeleteButton />\n        </Datagrid>\n      </List>\n    </PaddedContainer>\n  );\n};\n\nexport default HeadersList;\n","import { createMuiTheme } from '@material-ui/core';\nimport { amber, deepPurple } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepPurple[500],\n    },\n    secondary: {\n      main: amber[600],\n    },\n  },\n  overrides: {\n    MuiToolbar: {\n      dense: {\n        minHeight: '55px',\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: deepPurple[300],\n      },\n    },\n    MuiMenuItem: {\n      root: {\n        '&$selected': {\n          color: deepPurple[500],\n        },\n        textTransform: 'uppercase',\n        fontSize: '14px',\n        fontWeight: 'bold',\n        marginTop: '8px',\n        paddingTop: '14px',\n        paddingBottom: '14px',\n      },\n    },\n    MuiAppBar: {\n      colorSecondary: {\n        color: 'white',\n        backgroundColor: deepPurple[500],\n      },\n    },\n  },\n});\n\nexport default theme;\n","import { IconButton } from '@material-ui/core';\nimport React from 'react';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { withRouter } from 'react-router';\n\nconst BackButton = (props: any) => {\n  return (\n    <IconButton color='primary' onClick={props.history.goBack}>\n      <ArrowBackIcon />\n    </IconButton>\n  );\n};\n\nexport default withRouter(BackButton as any);\n","import * as React from 'react';\nimport { Create, SimpleForm, TextInput } from 'react-admin';\nimport BackButton from '../../common/BackButton';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface CreateHeaderProps {}\n\nconst CreateHeader: React.FC<CreateHeaderProps> = props => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h3 style={{ marginLeft: '18px' }}>Add a new Header</h3>\n      </div>\n      <Create title='Add a new header' {...props}>\n        <SimpleForm redirect='list'>\n          <TextInput required={true} source='title' />\n          <TextInput required={true} multiline={true} source='text' />\n          <TextInput disabled source='imageUrl' />\n        </SimpleForm>\n      </Create>\n    </PaddedContainer>\n  );\n};\n\nexport default CreateHeader;\n","import * as React from 'react';\nimport { Edit, SimpleForm, TextInput } from 'react-admin';\nimport BackButton from '../../common/BackButton';\nimport PaddedContainer from '../../common/PaddedContainer';\n\nexport interface EditHeaderProps {}\n\nconst EditHeader: React.FC<EditHeaderProps> = props => {\n  return (\n    <PaddedContainer padding='10px'>\n      <div>\n        <BackButton />\n        <h3 style={{ marginLeft: '18px' }}>Edit Header</h3>\n      </div>\n      <Edit {...props}>\n        <SimpleForm redirect='list'>\n          <TextInput disabled source='id' />\n          <TextInput required={true} source='title' />\n          <TextInput required={true} multiline={true} source='text' />\n        </SimpleForm>\n      </Edit>\n    </PaddedContainer>\n  );\n};\n\nexport default EditHeader;\n","import * as React from 'react';\nimport PaddedContainer from '../common/PaddedContainer';\n\nexport interface DashboardProps {}\n\nconst Dashboard: React.FC<DashboardProps> = () => {\n  return (\n    <PaddedContainer padding='10px'>\n      <h1>Welcome to the dashboard</h1>\n    </PaddedContainer>\n  );\n};\n\nexport default Dashboard;\n","export class AuthBody {\n  constructor(public UsernameOrEmail: string, public Password: string) {}\n}\n","import { fetchUtils } from 'ra-core';\nimport { authUrl } from '../config';\nimport { AuthBody } from './../models/AuthBody';\n\nclass AuthService {\n  currentUser = null;\n  login = async (username: string, password: string) => {\n    const response = await fetchUtils.fetchJson(authUrl, {\n      method: 'POST',\n      body: JSON.stringify(new AuthBody(username, password)),\n      headers: new Headers({ 'Content-Type': 'application/json' }),\n    });\n\n    if (\n      response.status < 200 ||\n      response.status >= 300 ||\n      !response.json.Successful\n    ) {\n      throw new Error(`${response.status}`);\n    }\n\n    const user = response.json.Response;\n\n    this.currentUser = user;\n\n    return user.access_token;\n  };\n}\nexport default new AuthService();\n","import { AuthProvider } from 'react-admin';\nimport authService from './authService';\n\nconst authProvider: AuthProvider = {\n  login: async ({ username, password }) => {\n    return authService.login(username, password).then(auth => {\n      localStorage.setItem('auth', auth);\n    });\n  },\n  logout: params => {\n    localStorage.removeItem('auth');\n    return Promise.resolve();\n  },\n  checkAuth: params => {\n    if (!!localStorage.getItem('auth')) return Promise.resolve();\n    return Promise.reject();\n  },\n  checkError: params => {\n    return Promise.resolve();\n  },\n  getPermissions: params => {\n    return Promise.resolve();\n  },\n};\n\nexport default authProvider;\n","import React from 'react';\nimport './App.css';\nimport { Admin, Resource } from 'react-admin';\nimport dataProvider from './data-provider/dataProvider';\nimport HeadersList from './fields/headers/HeadersList';\nimport { apiUrl } from './config';\nimport StarIcon from '@material-ui/icons/Star';\nimport theme from './theme/theme';\nimport CreateHeader from './fields/headers/HeaderCreate';\nimport EditHeader from './fields/headers/HeaderEdit';\nimport Dashboard from './components/Dashboard';\nimport authProvider from './auth-provider/authProvider';\n\nfunction App() {\n  return (\n    <Admin\n      theme={theme}\n      title='Admin Panel'\n      dashboard={Dashboard}\n      authProvider={authProvider}\n      dataProvider={dataProvider(apiUrl)}\n    >\n      <Resource\n        icon={StarIcon}\n        options={{ label: 'Headers' }}\n        name={'header'}\n        list={HeadersList}\n        create={CreateHeader}\n        edit={EditHeader}\n      ></Resource>\n    </Admin>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}